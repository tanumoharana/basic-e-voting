#include <stdio.h>
#include <string.h>

#define MAX_CANDIDATES 10
#define MAX_VOTERS 10000

// Structure to store candidate information
typedef struct {
    char name[100];
    int votes;
} Candidate;

Candidate candidates[MAX_CANDIDATES];
int candidate_count = 0;
int voted[MAX_VOTERS] = {0}; // To track whether a voter ID has already voted

void register_candidate() {
    if (candidate_count >= MAX_CANDIDATES) {
        printf("Cannot register more candidates.\n");
        return;
    }
    printf("\nEnter candidate name: ");
    scanf("%s", candidates[candidate_count].name);
    candidates[candidate_count].votes = 0;
    candidate_count++;
    printf("Candidate registered.\n");
}

void vote() {
    int voter_id;
    printf("\nEnter Voter ID (0-9999): ");
    scanf("%d", &voter_id);

    if (voter_id < 0 || voter_id >= MAX_VOTERS) {
        printf("Invalid Voter ID.\n");
        return;
    }
    if (voted[voter_id]) {
        printf("You have already voted.\n");
        return;
    }

    if (candidate_count == 0) {
        printf("No candidates registered yet.\n");
        return;
    }

    printf("Candidates:\n");
    for (int i = 0; i < candidate_count; i++) {
        printf("%d. %s\n", i + 1, candidates[i].name);
    }

    int choice;
    printf("Enter your choice (number): ");
    scanf("%d", &choice);

    if (choice < 1 || choice > candidate_count) {
        printf("Invalid choice.\n");
        return;
    }

    candidates[choice - 1].votes++;
    voted[voter_id] = 1;
    printf("Vote recorded.\n");
}

void count_votes() {
    printf("\nVote Count:\n");
    for (int i = 0; i < candidate_count; i++) {
        printf("%s: %d votes\n", candidates[i].name, candidates[i].votes);
    }
}

void declare_winner() {
    if (candidate_count == 0) {
        printf("No candidates to declare winner.\n");
        return;
    }

    int max_votes = -1;
    int winner_index = -1;
    for (int i = 0; i < candidate_count; i++) {
        if (candidates[i].votes > max_votes) {
            max_votes = candidates[i].votes;
            winner_index = i;
        }
    }

    printf("\nWinner: %s with %d votes\n", candidates[winner_index].name, candidates[winner_index].votes);
}

int main() {
    int option;

    while (1) {
        printf("\n--- E-Voting Menu ---\n");
        printf("1. Register Candidate\n");
        printf("2. Vote\n");
        printf("3. Count Votes\n");
        printf("4. Declare Winner\n");
        printf("5. Exit\n");
        printf("Choose an option: ");
        scanf("%d", &option);

        switch (option) {
            case 1:
                register_candidate();
                break;
            case 2:
                vote();
                break;
            case 3:
                count_votes();
                break;
            case 4:
                declare_winner();
                break;
            case 5:
                printf("Exiting...\n");
                return 0;
            default:
                printf("Invalid option. Please try again.\n");
        }
    }

    return 0;
}